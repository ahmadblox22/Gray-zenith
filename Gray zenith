-- Gray Zenith Hub v2.0 - Part 1 (Original)
-- Created by Anonymous Dev

local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

local Window = Rayfield:CreateWindow({
    Name = "Gray Zenith",
    LoadingTitle = "Gray Zenith Hub",
    LoadingSubtitle = "Framework Edition",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "GrayZenithFramework",
        FileName = "ZenithProfile"
    },
    Discord = {Enabled = false},
    KeySystem = false
})

-- Stealth Mode
print = function() end
warn = function() end

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Lighting = game:GetService("Lighting")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer
local function getChar() return LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait() end

-- Smart Targeting
local function getClosestTarget()
    local shortest, target = math.huge, nil
    for _, p in pairs(Players:GetPlayers()) do
        if p ~= LocalPlayer and p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            if p.Team and LocalPlayer.Team and p.Team == LocalPlayer.Team then continue end
            local pos, visible = Camera:WorldToViewportPoint(p.Character.HumanoidRootPart.Position)
            local dist = (Vector2.new(pos.X, pos.Y) - Camera.ViewportSize / 2).Magnitude
            if visible and dist < shortest then
                shortest = dist
                target = p
            end
        end
    end
    return target
end

-- Tabs
local Tabs = {
    Essentials = Window:CreateTab("Essentials", 0),
    Combat = Window:CreateTab("Combat", 0),
    Visuals = Window:CreateTab("Visuals", 0),
    Utilities = Window:CreateTab("Utilities", 0),
    Protection = Window:CreateTab("Protection", 0),
    Automation = Window:CreateTab("Automation", 0),
    Server = Window:CreateTab("Server Tools", 0),
    UI = Window:CreateTab("UI", 0),
    Config = Window:CreateTab("Zenith Config", 0)
}

-- Essentials
Tabs.Essentials:CreateToggle({
    Name = "Infinite Jump",
    CurrentValue = false,
    Callback = function(state)
        if state then
            UserInputService.JumpRequest:Connect(function()
                local hum = getChar():FindFirstChildWhichIsA("Humanoid")
                if hum then hum:ChangeState(Enum.HumanoidStateType.Jumping) end
            end)
        end
    end
})

Tabs.Essentials:CreateToggle({
    Name = "Directional Fly",
    CurrentValue = false,
    Callback = function(state)
        local char, hum = getChar(), getChar():FindFirstChildWhichIsA("Humanoid")
        local hrp = char:FindFirstChild("HumanoidRootPart")
        if state and hum and hrp then
            _G.flyEnabled = true
            hum.PlatformStand = true
            _G.flyConn = RunService.RenderStepped:Connect(function()
                local move = hum.MoveDirection * (_G.flyThrust or 50)
                hrp.Velocity = Vector3.new(move.X, move.Y + 25, move.Z)
            end)
        else
            _G.flyEnabled = false
            if _G.flyConn then _G.flyConn:Disconnect() end
            hum.PlatformStand = false
            hrp.Velocity = Vector3.zero
        end
    end
})

Tabs.Essentials:CreateSlider({
    Name = "Fly Thrust",
    Range = {0, 300},
    Increment = 10,
    Suffix = "Thrust",
    CurrentValue = 50,
    Callback = function(val) _G.flyThrust = val end
})

Tabs.Essentials:CreateSlider({
    Name = "Speed Boost",
    Range = {16, 200},
    Increment = 1,
    Suffix = "Speed",
    CurrentValue = 16,
    Callback = function(val)
        local hum = getChar():FindFirstChildWhichIsA("Humanoid")
        if hum then hum.WalkSpeed = val end
    end
})

-- Combat
Tabs.Combat:CreateToggle({
    Name = "Aimbot + Auto Shoot",
    CurrentValue = false,
    Callback = function(state)
        _G.aimActive = state
        RunService.RenderStepped:Connect(function()
            if not _G.aimActive then return end
            local target = getClosestTarget()
            local char = getChar()
            local hrp = char:FindFirstChild("HumanoidRootPart")
            local tool = char:FindFirstChildOfClass("Tool")
            if target and hrp and tool and tool:FindFirstChild("Handle") then
                local head = target.Character:FindFirstChild("Head")
                if head then
                    hrp.CFrame = CFrame.new(hrp.Position, head.Position)
                    Camera.CFrame = CFrame.new(Camera.CFrame.Position, head.Position)
                    tool:Activate()
                end
            end
        end)
    end
})

-- Config Tab
Tabs.Config:CreateInput({
    Name = "Load Config JSON",
    PlaceholderText = "Paste JSON here",
    RemoveTextAfterFocusLost = true,
    Callback = function(text)
        local success, result = pcall(function() return HttpService:JSONDecode(text) end)
        Rayfield:Notify({Title = "Zenith Config", Content = success and "Config loaded" or "Invalid JSON"})
    end
})-- ESP System
Tabs.Visuals:CreateToggle({
    Name = "Ultra ESP (Beams + Boxes + Health Bars)",
    CurrentValue = false,
    Callback = function(state)
        _G.espEnabled = state

        local function clearESP()
            for _, p in pairs(Players:GetPlayers()) do
                if p.Character then
                    for _, part in ipairs(p.Character:GetChildren()) do
                        if part:IsA("BasePart") then
                            part:FindFirstChild("ESPBox")?.Destroy()
                        end
                    end
                    local head = p.Character:FindFirstChild("Head")
                    head?.FindFirstChild("ESPBeam")?.Destroy()
                    head?.FindFirstChild("HealthBar")?.Destroy()
                end
            end
        end

        local function createESP()
            for _, p in pairs(Players:GetPlayers()) do
                if p ~= LocalPlayer and p.Character and p.Character:FindFirstChild("Humanoid") then
                    local isAlly = p.Team and LocalPlayer.Team and p.Team == LocalPlayer.Team
                    local color = isAlly and Color3.fromRGB(0, 170, 255) or Color3.new(1, 0, 0)
                    local hum = p.Character:FindFirstChild("Humanoid")
                    local head = p.Character:FindFirstChild("Head")

                    for _, part in ipairs(p.Character:GetChildren()) do
                        if part:IsA("BasePart") and not part:FindFirstChild("ESPBox") then
                            local box = Instance.new("BoxHandleAdornment", part)
                            box.Name = "ESPBox"
                            box.Adornee = part
                            box.Size = part.Size
                            box.Transparency = 0.6
                            box.Color3 = color
                            box.AlwaysOnTop = true
                        end
                    end

                    if head and not head:FindFirstChild("ESPBeam") then
                        local beam = Instance.new("Beam", head)
                        beam.Name = "ESPBeam"
                        beam.Width0 = 0.2
                        beam.Width1 = 0.2
                        beam.Color = ColorSequence.new(color)
                        beam.Transparency = NumberSequence.new(0.2)
                        beam.Attachment0 = Instance.new("Attachment", Camera)
                        beam.Attachment1 = Instance.new("Attachment", head)
                    end

                    if head and not head:FindFirstChild("HealthBar") then
                        local gui = Instance.new("BillboardGui", head)
                        gui.Name = "HealthBar"
                        gui.Size = UDim2.new(4, 0, 0.4, 0)
                        gui.StudsOffset = Vector3.new(0, 3, 0)
                        gui.AlwaysOnTop = true

                        local bar = Instance.new("Frame", gui)
                        bar.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
                        bar.BorderSizePixel = 0
                        bar.Size = UDim2.new(hum.Health / hum.MaxHealth, 0, 1, 0)

                        hum.HealthChanged:Connect(function(hp)
                            bar.Size = UDim2.new(hp / hum.MaxHealth, 0, 1, 0)
                        end)
                    end
                end
            end
        end

        if state then
            _G.espLoop = task.spawn(function()
                while _G.espEnabled do
                    clearESP()
                    createESP()
                    task.wait(5)
                end
            end)
        else
            _G.espEnabled = false
            clearESP()
            if _G.espLoop then task.cancel(_G.espLoop) _G.espLoop = nil end
        end
    end
})

-- Crash Guard
Tabs.Protection:CreateToggle({
    Name = "Crash Guard (Auto Respawn)",
    CurrentValue = false,
    Callback = function(state)
        if state then
            LocalPlayer.CharacterAdded:Connect(function(char)
                char:WaitForChild("Humanoid").Died:Connect(function()
                    task.wait(1)
                    LocalPlayer:LoadCharacter()
                end)
            end)
        end
    end
})

-- Anti-AFK
Tabs.Utilities:CreateToggle({
    Name = "Anti-AFK",
    CurrentValue = false,
    Callback = function(state)
        if state then
            _G.afkConn = LocalPlayer.Idled:Connect(function()
                local vu = game:GetService("VirtualUser")
                vu:Button2Down(Vector2.new(), Camera.CFrame)
                task.wait(1)
                vu:Button2Up(Vector2.new(), Camera.CFrame)
            end)
        elseif _G.afkConn then
            _G.afkConn:Disconnect()
            _G.afkConn = nil
        end
    end
})

-- Automation
Tabs.Automation:CreateToggle({
    Name = "Auto Equip Nearby Tool",
    CurrentValue = false,
    Callback = function(state)
        _G.autoTool = state
        if state then
            task.spawn(function()
                while _G.autoTool do
                    task.wait(0.5)
                    for _, tool in pairs(workspace:GetDescendants()) do
                        if tool:IsA("Tool") and tool:FindFirstChild("Handle") then
                            if (tool.Handle.Position - getChar().HumanoidRootPart.Position).Magnitude < 10 then
                                firetouchinterest(getChar().HumanoidRootPart, tool.Handle, 0)
                                firetouchinterest(getChar().HumanoidRootPart, tool.Handle, 1)
                            end
                        end
                    end
                end
            end)
        end
    end
})

-- Server Tools
Tabs.Server:CreateButton({
    Name = "Server Hop",
    Callback = function()
        local servers = HttpService:JSONDecode(game:HttpGet(
            "https://games.roblox.com/v1/games/"..game.PlaceId.."/servers/Public?sortOrder=Asc&limit=100"))
        for _, s in pairs(servers.data) do
            if s.playing < s.maxPlayers then
                TeleportService:TeleportToPlaceInstance(game.PlaceId, s.id)
                break
            end
        end
    end
})

Tabs.Server:CreateButton({
    Name = "Rejoin Server",
    Callback = function()
        TeleportService:Teleport(game.PlaceId, LocalPlayer)
    end
})

Tabs.Server:CreateButton({
    Name = "Copy Server ID",
    Callback = function()
        setclipboard(game.JobId)
    end
})

-- UI Theme Switcher
Tabs.UI:CreateDropdown({
    Name = "Theme Style",
    Options = {"Dark", "Neon", "Tactical Green"},
    CurrentOption = "Dark",
    Callback = function(opt)
        Lighting.Ambient = opt == "Neon" and Color3.fromRGB(255, 0, 255)
            or opt == "Tactical Green" and Color3.fromRGB(0, 255, 150)
            or Color3.fromRGB(50, 50, 50)
    end
})

Tabs.UI:CreateButton({
    Name = "Reset UI Layout",
    Callback = function()
        Rayfield:ReloadUI()
    end
})
